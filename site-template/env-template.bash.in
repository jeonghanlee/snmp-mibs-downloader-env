#!/usr/bin/env bash
#
#  author  : Jeong Han Lee
#  email   : jeonghan.lee@gmail.com
#  version : 0.0.3


declare -g SC_RPATH;
#declare -g SC_NAME;
declare -g SC_TOP;
declare -g SC_TIME;

SC_RPATH="$(realpath "$0")";
#SC_NAME=${0##*/};
SC_TOP="${SC_RPATH%/*}"
SC_TIME="$(date +%y%m%d%H%M)"


set -a
# shellcheck disable=SC1091,SC1090
. "${SC_TOP}/@APPNAME@.conf"
set +a

# Enable core dumps in case the JVM fails
ulimit -c unlimited

# shutdown_services is not the same as startup_services
# Order is matter. Please don't change their order.
startup_service=()
shutdown_service=()
service=( @APPNAME_SERVICES@ )

for a_service in "${service[@]}"; do
    startup_services+="$a_service";
    shutdown_services+="$a_service";
done


function pushdd { builtin pushd "$@" > /dev/null || exit; }
function popdd  { builtin popd  > /dev/null || exit; }

function get_ip
{
    ip -4 route get 8.8.8.8 | awk \{'print $7'\} | tr -d '\n'
}

# 1 : installation path : @INSTALL_LOCATION@
# 2 : Service name : @APPNAME_SERVICES@
function get_pid
{
    local  top="$1";shift;
    local  name="$1";shift;
    local  pid;
    pid=$(cat "${top}/${name}/temp/${name}.pid")
    printf "%12s : pid %6d exists.\n" "${name}" "$pid"
}

# shellcheck disable=SC2120
function startup_application
{
    local top="$1";shift;

    if [ -z "$top" ]; then
	    top="${SC_TOP}"
    fi

    # shutdown_services is not the same as startup_services
    # Order is matter
    for service in "${startup_services[@]}"; do
        pushdd "${top}/${service}"
        rm -rf "temp/${service}.pid"
        bash bin/startup.sh
        popdd
    done
}

# shellcheck disable=SC2120
function shutdown_application
{
    local top="$1";shift;

    if [ -z "$top" ]; then
	    top="${SC_TOP}"
    fi

    # shutdown_services is not the same as startup_services
    # Order is matter
    for service in "${shutdown_services[@]}"; do
        pushdd "${top}/${service}"
        bash bin/shutdown.sh
        rm -rf "temp/${service}.pid"
        popdd
    done  
}

# shellcheck disable=SC2120
function jsvc_shutdown_application
{
    local top="$1";shift;

    if [ -z "$top" ]; then
	    top="${SC_TOP}"
    fi

    # Does tomcat user can shutdown all without sudo?
    for service in "${startup_services[@]}"; do
        "${JAVA_HOME}"/bin/jsvc -stop -pidfile "${top}/${service}/temp/${service}.pid" org.apache.catalina.startup.Bootstrap
 #      sudo "${JAVA_HOME}"/bin/jsvc -stop -pidfile "${top}/${service}/temp/${service}.pid" org.apache.catalina.startup.Bootstrap
    done  
}

# shellcheck disable=SC2120
function status_application
{

    local top="$1";shift;

    if [ -z "$top" ]; then
	    top="${SC_TOP}"
    fi

    local ip_addr="";
    ip_addr=$(get_ip);


    printf ">------------------------------------------------------------\n"
    printf ">>> Current Time %s\n" "${SC_TIME}"
    printf ">------------------------------------------------------------\n"
    printf ">>> @APPFULLNAME@ Status \n"
    printf ">------------------------------------------------------------\n"
    printf "    http://%s:@APPNAME_PVWS_PORT@/pvws \n" "${HOSTNAME}";
    printf "                        OR\n";
    printf "    http://%s:@APPNAME_PVWS_PORT@/pvws\n" "${ip_addr}";
    printf "                         OR\n";
    printf "    http://%s:@APPNAME_PVWS_PORT@/pvws\n" "localhost";
    printf ">------------------------------------------------------------\n"
    printf "\n";
    printf ">>> Consult Service Logs \n";
    printf ">------------------------------------------------------------\n"
    for service in "${startup_services[@]}"; do
        printf "  tail -f %s/%s/logs/catalina.out\n" "${top}" "${service}";
    done  
    printf ">------------------------------------------------------------\n"
    printf ">>> Service PIDs \n"
    printf "    All Tomcat processes\n";
    pgrep 'org.apache.catalina.startup.Bootstrap'
    printf ">------------------------------------------------------------\n"
    printf "    @APPNAME_SERVICES@ PIDs\n"
    for service in "${startup_services[@]}"; do
        get_pid "${top}" "${service}";
    done  
    printf ">------------------------------------------------------------\n"
    printf "\n";
}

function @APPNAME@info 
{

    local arg="$1";shift;
    local ip_addr="";
    ip_addr=$(get_ip);

    #The servlet info returns JSON with general server info.
    #The servlet summary returns JSON with a summary of all active web sockets.
    #The servlet socket returns JSON with details on all active web sockets and their PVs.
    #The servlet pool returns JSON with a listing of all PVs in the PV connection pool.
    
    local info_url="http://${ip_addr}:@APPNAME_PVWS_PORT@/pvws/info";
    local summary_url="http://${ip_addr}:@APPNAME_PVWS_PORT@/pvws/summary";
    local socket_url="http://${ip_addr}:@APPNAME_PVWS_PORT@/pvws/socket";
    local pool_url="http://${ip_addr}:@APPNAME_PVWS_PORT@/pvws/pool";

    if [ -z "$arg" ]; then
            arg="info"
    fi

    case "$arg" in
        info)
                curl -s $info_url | json_pp
            ;;
        summary)
                curl -s $summary_url | json_pp
            ;;
        socket)
                curl -s $socket_url | json_pp
            ;;
        pool)
                curl -s $pool_url | json_pp
            ;;
        *)
            printf ">>> info, summary, socket, and pool options are available\n"
        ;;
    esac    

}

#function status_storage
#{
#    local all=$1; shift;
#    printf "\n>>>> Storage Status at %s\n\n" "${SC_TIME}";
#    # ARCHAPPL_STORAGE_TOP is defined in archappl.conf
#    if [[ $OSTYPE == 'darwin'* ]]; then
#        sudo du -c -h -a "${ARCHAPPL_STORAGE_TOP}"
#    else
#        sudo -E bash -c "du --total --human-readable --time --\"${all}\" \"${ARCHAPPL_STORAGE_TOP}\"";
#    fi
#    printf "\n";
#}

function usage
{
    {
        echo "";
        echo "Usage    : $0  args [2nd args]"
        echo "";
        echo "               possbile args";
        echo "";
        echo "               startup   : startup all services in order";
        echo "               shutdown  : shutdown all services in order ";
        echo "               restartup : shutdown and startup";
 #       echo "               storage   : show the storage status";
        echo "               status    : show summary for status"; 
        echo "               info      : JSON returns (2nd args:info,summary,socket,pool)"
        echo "               h         : this screen";
        echo "";
        echo " bash $0 startup "
        echo " bash $0 info summary"
        echo ""
    } 1>&2;
    exit 1;
}



case "$1" in
    startup)
	    startup_application
	    ;;
    shutdown)
	    shutdown_application
	    ;;
    restart)
	    startup_application
	    shutdown_application
	    ;;
    status)
	    status_application
	    ;;
#    storage)
#	    case "$2" in
#	        all) status_storage "$2" ;;
#	    *)       status_storage      ;;
#	    esac
#	    ;;
    info)
        @APPNAME@info "$2"
        ;;
    h);;
    help)
        usage;
        ;;
    *)
	    usage;
    ;;
esac

